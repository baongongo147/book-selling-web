"""
Django settings for webbanhang project.

Generated by 'django-admin startproject' using Django 5.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent           # Cấu hình đường dẫn và thư mục cơ bản: sử dụng 'Path'để xác định thư mục cơ bản của dự án giúp xây dựng đường dẫn trong dự án một cách dễ dàng hơn.


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-ksip^wl^_=gh1z@mod@t-812prv#q6teg4vn4gmm09aps*eyyc'       # Đây là một chuỗi bí mật được sử dụng để bảo mật ứng dụng Django

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True            # Được sử dụng để bật/tắt chế độ gõ lỗi

ALLOWED_HOSTS = []      # Danh sách các tên miền mà Django sẽ phục vụ.

# Application definition

INSTALLED_APPS = [
    # Đây là danh sách các ứng dụng Django được cài đặt trong dự án
    # Các ứng dụng này bao gồm các ứng dụng tích hợp sẵn của Django cũng như các ứng dụng tùy chỉnh
    'django.contrib.admin',         # Ứng dụng quản trị tích hợp sẵn của Django, cho phép quản lý dữ liệu trên giao diện quản trị
    'django.contrib.auth',          # Ứng dụng xác thực tích hợp sẵn của Django, cung cấp chức năng đăng nhập, đăng ký và quản lý người dùng
    'django.contrib.contenttypes',  # Ứng dụng quản lý các loại nội dung và quan hệ giữa chúng
    'django.contrib.sessions',      # Ứng dụng quản lý phiên của người dùng
    'django.contrib.messages',      # Ứng dụng cung cấp hỗ trợ cho thông điệp
    'django.contrib.staticfiles',   # Ứng dụng quản lý các tệp tĩnh như CSS, JavaScript và hình ảnh
    'app',                          # Ứng dụng tùy chỉnh dự án
]



MIDDLEWARE = (      
    # Đây là các danh sách các phần mềm trung gian được thực thi trước hoặc sau khi một yêu cầu được xử lý bởi ứng dụng Django.
    "django.middleware.common.CommonMiddleware",                # cung cấp các chức năng phổ biến cho ứng dụng, bao gồm xử lý yêu cầu và phản hồi, xác định ngôn ngữ và thêm tiêu đề bảo vệ khỏi clickjacking
    "django.contrib.sessions.middleware.SessionMiddleware",     # quản lý phiên của người dùng, cho phép lưu trữ và truy xuất dữ liệu phiên trên các yêu cầu liên tục             
    "django.middleware.csrf.CsrfViewMiddleware",                # xử lý việc bảo vệ chống tấn công CSRF (Cross-Site Request Forgery) bằng cách thêm mã CSRF vào mỗi biểu mẫu
    "django.contrib.auth.middleware.AuthenticationMiddleware",  # thêm thông tin về người dùng hiện tại vào yêu cầu, giúp xác thực và quản lý phiên của người dùng
    "django.contrib.messages.middleware.MessageMiddleware",     # xử lý tin nhắn của hệ thống, cho phép hiển thị các thông báo hoặc cảnh báo đến người dùng
    "django.middleware.clickjacking.XFrameOptionsMiddleware",   # cung cấp bảo vệ chống tấn công clickjacking bằng cách cấu hình tiêu đề X-Frame-Options trên phản hồi HTTP

    # # Add the account middleware:
    # "allauth.account.middleware.AccountMiddleware",
)

ROOT_URLCONF = 'webbanhang.urls'        # là thiết lập cho biết tên của module URL chính được sử dụng để điều hướng các yêu cầu HTTP đến các view tương ứng trong ứng dụng web

TEMPLATES = [
    # Xác định cấu hình cho các template engine được sử dụng trong dự án Django.
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',   # Đây là cách Django xác định rằng template engine được sử dụng là Django's template engine.
        'DIRS': [],                                                     # Đây là danh sách các thư mục chứa các template. Trong trường hợp này, danh sách này là rỗng, tức là Django sẽ sử dụng các template được định nghĩa trong các ứng dụng (APP_DIRS = True).
        'APP_DIRS': True,                                               # Điều này cho phép Django tìm kiếm các template trong các thư mục của ứng dụng (app/templates/).
        'OPTIONS': {                                                    # Cấu hình thêm cho template engine, bao gồm các context processors. Context processors được sử dụng để thêm các biến vào mỗi context (bối cảnh) của template.
            'context_processors': [
                'django.template.context_processors.debug',             # Thêm biến DEBUG vào mỗi context, cho phép kiểm tra xem có đang chạy trong môi trường debug không.
                'django.template.context_processors.request',           # Thêm đối tượng HttpRequest vào mỗi context, cho phép truy cập các thông tin về request hiện tại.
                'django.contrib.auth.context_processors.auth',          # Thêm thông tin về người dùng đã xác thực (nếu có) vào mỗi context.
                'django.contrib.messages.context_processors.messages',  # Thêm các tin nhắn (messages) vào mỗi context, cho phép hiển thị thông báo đến người dùng.
            ],
        },
    },
]

WSGI_APPLICATION = 'webbanhang.wsgi.application'    # Đây là ứng dụng WSGI sẽ được sử dụng để phục vụ dự án Django khi triển khai


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

# DATABASES = {                                   # Cấu hình kết nối cơ sở dữ liệu cho dự án Django
#     'default': {                                # Tên của kết nối mặc định
#         'ENGINE': 'django.db.backends.mysql',   # Loại cơ sở dữ liệu mà Django sẽ kết nối. Trong trường hợp này, sử dụng MySQL
#         'NAME': 'webbanhang',                   # Tên của cơ sở dữ liệu mà Django sẽ sử dụng
#         'USER': 'root',                         # Tên người dùng MySQL mà Django sẽ sử dụng để kết nối vào cơ sở dữ liệu
#         'PASSWORD': 'bao29082004',              # Mật khẩu của người dùng MySQL được chỉ định
#         'HOST': 'localhost',                    # Đây là địa chỉ máy chủ MySQL. Trong trường hợp này, máy chủ MySQL đang chạy trên cùng một máy chủ với dự án Django, nên sử dụng 'localhost'.
#     }
# }


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}




# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators


# Yêu cầu của PASSWWORD
AUTH_PASSWORD_VALIDATORS = [
    # Đây là các quy tắc đặt mật khẩu cho người dùng
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
        # Kiểm tra xem mật khẩu có chứa thông tin cá nhân của người dùng không, như tên người dùng hoặc email, để tránh việc sử dụng thông tin cá nhân trong mật khẩu
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        # Đảm bảo rằng mật khẩu có ít nhất một số ký tự xác định. Thông thường, đây là validator kiểm tra độ dài tối thiểu của mật khẩu
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
        # Kiểm tra xem mật khẩu có thuộc danh sách các mật khẩu phổ biến không.
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
        # Đảm bảo rằng mật khẩu chứa ít nhất một ký tự số, giúp tăng tính đa dạng và độ khó của mật khẩu
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'     # Cấu hình quốc gia

TIME_ZONE = 'UTC'           # Cấu hình múi giờ

USE_I18N = True             # Cấu hình quốc tế hóa

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'      # Đường dẫn URL mà tập tin tĩnh (như CSS, JavaScript, hình ảnh) sẽ được phục vụ

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'        # Loại trường chính phụ thuộc vào phiên bản Django hiện tại
STATICFILES_DIRS = [
    # Đây là một danh sách các đường dẫn tới các thư mục chứa tệp tin tĩnh (CSS, JavaScript, hình ảnh, ...) không thuộc vào các ứng dụng cụ thể
    os.path.join(BASE_DIR, 'static')
]

MEDIA_URL = '/images/'                                      # Đường dẫn URL mà các tập tin media (như hình ảnh, video, tài liệu) sẽ được sử dụng
MEDIA_ROOT = os.path.join(BASE_DIR, 'app/static/images')    # Đường dẫn tới thư mục trên máy chủ nơi các tập tin media thực sự được lưu trữ
